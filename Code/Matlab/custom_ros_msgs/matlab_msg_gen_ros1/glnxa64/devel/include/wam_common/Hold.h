// Generated by gencpp from file wam_common/Hold.msg
// DO NOT EDIT!


#ifndef WAM_COMMON_MESSAGE_HOLD_H
#define WAM_COMMON_MESSAGE_HOLD_H

#include <ros/service_traits.h>


#include <wam_common/HoldRequest.h>
#include <wam_common/HoldResponse.h>


namespace wam_common
{

struct Hold
{

typedef HoldRequest Request;
typedef HoldResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Hold
} // namespace wam_common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::wam_common::Hold > {
  static const char* value()
  {
    return "797a139a4299aebd587b00a7001c67f7";
  }

  static const char* value(const ::wam_common::Hold&) { return value(); }
};

template<>
struct DataType< ::wam_common::Hold > {
  static const char* value()
  {
    return "wam_common/Hold";
  }

  static const char* value(const ::wam_common::Hold&) { return value(); }
};


// service_traits::MD5Sum< ::wam_common::HoldRequest> should match
// service_traits::MD5Sum< ::wam_common::Hold >
template<>
struct MD5Sum< ::wam_common::HoldRequest>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Hold >::value();
  }
  static const char* value(const ::wam_common::HoldRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::HoldRequest> should match
// service_traits::DataType< ::wam_common::Hold >
template<>
struct DataType< ::wam_common::HoldRequest>
{
  static const char* value()
  {
    return DataType< ::wam_common::Hold >::value();
  }
  static const char* value(const ::wam_common::HoldRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::wam_common::HoldResponse> should match
// service_traits::MD5Sum< ::wam_common::Hold >
template<>
struct MD5Sum< ::wam_common::HoldResponse>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Hold >::value();
  }
  static const char* value(const ::wam_common::HoldResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::HoldResponse> should match
// service_traits::DataType< ::wam_common::Hold >
template<>
struct DataType< ::wam_common::HoldResponse>
{
  static const char* value()
  {
    return DataType< ::wam_common::Hold >::value();
  }
  static const char* value(const ::wam_common::HoldResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WAM_COMMON_MESSAGE_HOLD_H
