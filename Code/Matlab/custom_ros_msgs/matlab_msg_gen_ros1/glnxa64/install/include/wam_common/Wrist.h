// Generated by gencpp from file wam_common/Wrist.msg
// DO NOT EDIT!


#ifndef WAM_COMMON_MESSAGE_WRIST_H
#define WAM_COMMON_MESSAGE_WRIST_H

#include <ros/service_traits.h>


#include <wam_common/WristRequest.h>
#include <wam_common/WristResponse.h>


namespace wam_common
{

struct Wrist
{

typedef WristRequest Request;
typedef WristResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Wrist
} // namespace wam_common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::wam_common::Wrist > {
  static const char* value()
  {
    return "f86fdbd3e330ea48b43168fdd8a60964";
  }

  static const char* value(const ::wam_common::Wrist&) { return value(); }
};

template<>
struct DataType< ::wam_common::Wrist > {
  static const char* value()
  {
    return "wam_common/Wrist";
  }

  static const char* value(const ::wam_common::Wrist&) { return value(); }
};


// service_traits::MD5Sum< ::wam_common::WristRequest> should match
// service_traits::MD5Sum< ::wam_common::Wrist >
template<>
struct MD5Sum< ::wam_common::WristRequest>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Wrist >::value();
  }
  static const char* value(const ::wam_common::WristRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::WristRequest> should match
// service_traits::DataType< ::wam_common::Wrist >
template<>
struct DataType< ::wam_common::WristRequest>
{
  static const char* value()
  {
    return DataType< ::wam_common::Wrist >::value();
  }
  static const char* value(const ::wam_common::WristRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::wam_common::WristResponse> should match
// service_traits::MD5Sum< ::wam_common::Wrist >
template<>
struct MD5Sum< ::wam_common::WristResponse>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Wrist >::value();
  }
  static const char* value(const ::wam_common::WristResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::WristResponse> should match
// service_traits::DataType< ::wam_common::Wrist >
template<>
struct DataType< ::wam_common::WristResponse>
{
  static const char* value()
  {
    return DataType< ::wam_common::Wrist >::value();
  }
  static const char* value(const ::wam_common::WristResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WAM_COMMON_MESSAGE_WRIST_H
