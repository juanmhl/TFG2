// Generated by gencpp from file wam_common/Move.msg
// DO NOT EDIT!


#ifndef WAM_COMMON_MESSAGE_MOVE_H
#define WAM_COMMON_MESSAGE_MOVE_H

#include <ros/service_traits.h>


#include <wam_common/MoveRequest.h>
#include <wam_common/MoveResponse.h>


namespace wam_common
{

struct Move
{

typedef MoveRequest Request;
typedef MoveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Move
} // namespace wam_common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::wam_common::Move > {
  static const char* value()
  {
    return "1ce238898166ce57c9f3f359833b9d6e";
  }

  static const char* value(const ::wam_common::Move&) { return value(); }
};

template<>
struct DataType< ::wam_common::Move > {
  static const char* value()
  {
    return "wam_common/Move";
  }

  static const char* value(const ::wam_common::Move&) { return value(); }
};


// service_traits::MD5Sum< ::wam_common::MoveRequest> should match
// service_traits::MD5Sum< ::wam_common::Move >
template<>
struct MD5Sum< ::wam_common::MoveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Move >::value();
  }
  static const char* value(const ::wam_common::MoveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::MoveRequest> should match
// service_traits::DataType< ::wam_common::Move >
template<>
struct DataType< ::wam_common::MoveRequest>
{
  static const char* value()
  {
    return DataType< ::wam_common::Move >::value();
  }
  static const char* value(const ::wam_common::MoveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::wam_common::MoveResponse> should match
// service_traits::MD5Sum< ::wam_common::Move >
template<>
struct MD5Sum< ::wam_common::MoveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::wam_common::Move >::value();
  }
  static const char* value(const ::wam_common::MoveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_common::MoveResponse> should match
// service_traits::DataType< ::wam_common::Move >
template<>
struct DataType< ::wam_common::MoveResponse>
{
  static const char* value()
  {
    return DataType< ::wam_common::Move >::value();
  }
  static const char* value(const ::wam_common::MoveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WAM_COMMON_MESSAGE_MOVE_H
